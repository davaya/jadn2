{
  "meta": {
    "title": "JADNv2 Test Schema",
    "package": "http://example.org/jadn-test/",
    "roots": ["Test"]
  },
  "types": [
    ["Test", "Record", [], "Test schema format conversions for all options", [
      [1, "opts", "Options", [], "Type and field options"],
      [2, "coll", "Collections", [], "Compound types with collection semantics"],
      [3, "comb", "Combinations", [], "Untagged unions"]
    ]],

    ["Options", "Record", [], "Individual options", [
      [1, "vtype", "ArrayOf", ["*Bar"], "valueType"],
      [2, "ktype", "MapOf", ["+Foo", "*Bar"], "keyType and valueType"],
      [3, "enum", "Enumerated", ["#ValOpts"], "Derived enumeration serialized as names"],
      [4, "id", "Enumerated", ["#ValOpts", "="], "Derived enumeration serialized as IDs"],
      [5, "pointers", "Enumerated", [">ValOpts"], "Derived enumeration of pointers"],
      [6, "length", "String", ["{3", "}9"], "character or byte count"],
      [7, "regex", "String", ["%^/[a-zA-Z0-9]{1,16}+$"], "Match regular expression"],
      [8, "fields", "ValOpts", ["[0", "&3"], "select value based on 'enum' field"],
      [9, "nil", "NilOpts", ["[0"], "nillable vs. optional values"]
    ]],

    ["ValOpts", "Choice", [], "Options with dependent value types", [
      [9, "abc", "Boolean", ["ufalse"], "TODO: fix default is true/false"],
      [8, "def", "Number", ["y10", "x20"], "half-open interval up to 19.999999"],
      [4, "bcd", "Integer", ["w3", "z6", "u5"], "half-open interval 4-6, default=5"],
      [1, "cde", "Integer", ["v8"], "=[constant] (minInclusive=maxInclusive)"],
      [7, "fgh", "String", ["vFred"], "=[constant]"],
      [3, "efg", "String", ["uFred", "{3", "}9", "[0"], "Length 3-9, ?=[default value]"],
      [2, "ghi", "Binary", ["v000102032d466f6f"], "constant"]
    ]],

    ["NilOpts", "Record", [], "Nillable Types", [
      [1, "bool", "Boolean", ["0"], "Required + nillable + absent = null in map and array"],
      [2, "int", "Integer", ["y2", "z9", "[0"], "Optional = nillable = absent in map, null in array"],
      [3, "num", "Number", ["v5"], "Required + not nillable + absent = invalid"],
      [4, "str", "String", ["uFred", "0"], "default ignored if field is required"],
      [5, "octets", "Binary", ["v00", "0"], "b'0' != b'' != null"]
    ]],

    ["Collections", "Record", [], "Collection semantics: Compound serialization", [
      [1, "a", "ArrayOf", ["*String"], "Sequence: array of ordered elements"],
      [2, "b", "ArrayOf", ["*String", "s"], "Set: array of unordered unique elements"],
      [3, "c", "ArrayOf", ["*String", "q"], "OrderedSet: array of ordered unique elements"],
      [4, "d", "ArrayOf", ["*String", "b"], "Bag: array of unordered elements"],
      [5, "e", "ArrayOf", ["*Keyed", "s"], "Map: array of keyed elements"],
      [6, "f", "ArrayOf", ["*Keyed"], "OrderedMap: array of ordered and keyed elements"],
      [7, "g", "MapOf", ["+String", "*String"], "Map: collection of key:value associations"],
      [8, "h", "MapOf", ["+String", "*String", "o"], "OrderedMap: collection of ordered key:value associations"],
      [9, "i", "Acoll", [], "Sequence - collection of typed elements accessed by position: array"],
      [10, "j", "Mcoll", [], "Map - collection of typed elements accessed by key (id or name): map"],
      [11, "k", "McollId", [], "Map - collection of typed elements accessed by key (id): map"],
      [12, "l", "Rcoll", [], "OrderedMap - collection of typed elements accessed by position or key: map or array"]
    ]],

    ["Keyed", "Record", [], "Value with a primary key", [
      [1, "name", "String", [], "Column 1"],
      [2, "id", "Integer", ["K"], "Record identifier (Primary Key)"],
      [3, "email", "String", [], "Column 3"],
      [4, "phone", "String", [], "Column 4"]
    ]],

    ["Acoll", "Array", [], "Sequence: Collection accessed by position (=id)", [
      [1, "name", "String"],
      [2, "rank", "String"],
      [3, "serialNumber", "Integer"]
    ]],

    ["Mcoll", "Map", [], "Map: Collection accessed by key (id or name)", [
      [5, "name", "String"],
      [2, "rank", "String"],
      [4, "serialNumber", "Integer"]
    ]],

    ["McollId", "Map", ["="], "Map: Collection accessed by key (id)", [
      [5, "name", "String"],
      [2, "rank", "String"],
      [4, "serialNumber", "Integer"]
    ]],

    ["Rcoll", "Record", [], "OrderedMap: Collection accessed by position (=id) or key (=name)", [
      [1, "name", "String"],
      [2, "rank", "String"],
      [3, "serialNumber", "Integer"]
    ]],

    ["Combinations", "Record", [], "Untagged Unions", [
      [1, "c1", "C1", [], "Only one"],
      [2, "c2", "C2", [], "One or more"],
      [3, "c3", "C3", [], "All"]
    ]],

    ["C1", "Choice", ["ConeOf"], "Only one - int or any string except keywords",[
      [1, "c1", "Colors", [], "Specific keywords"],
      [2, "c2", "String", ["}10"], "Any string"],
      [3, "c3", "Integer"]
    ]],

    ["C2", "Choice", ["CanyOf"], "Choose first match",[
      [1, "c1", "Colors", [], "Specific keywords"],
      [2, "c2", "String", ["}10"], "Any string"],
      [3, "c3", "Integer"]
    ]],

    ["C3", "Choice", ["CallOf"], "All never matches - conflicting types",[
      [1, "c1", "Colors", [], "Specific keywords"],
      [2, "c2", "String", ["}10"], "Any string"],
      [3, "c3", "Integer"]
    ]],

    ["Colors", "Enumerated", [], "Keyword id and string",[
      [7, "red"],
      [5, "green"],
      [3, "blue"]
    ]]
  ]
}
